unit tests? No, I'm not going to write any.
add submodules:
	pymatcher? could just rewrite, probably wouldn't hurt
	AF2: ask Nater tot if there are any special considerations


how to do better than last round, chA:
bicistronic screen had high false positives, possibly co-expressed genes resulted in "locked" state Y complexes.
longer loops for state Ys, force state X to have longer (63 and 74-7 have longer than parent, 129 only has match)
torsional space only for backbone generation, later relax into predictions (in torsional space?)
absolutely no disulfides during design >:(
don't over optimize on SAP
how to do better than last round, chB:
longer chB, all have 27 except 63 which had 21 (as opposed to 17-25)
charges? + C term, - N term
    check results of the chB order4
FF129 has a very polar interface, Cterm sequence is QLQKKNKKQQK
Some have lower helical propensity and most lower coiled-coil propensity at termini (did not quantify)
backside hydrophobics and aromatics may break coiled coil propensity, resurfacing to all polars sometimes seemed to cause issues (also sometimes fixed issues like in FF75) 
    check results of the chB order4


Strategy:
Use MPNN for sequence design after smaller sampling runs with Rosetta to sample backbones
Probably only need delta SAP and CMS/ddG/SASA for interface filtering
Start MSD sampling from designs that alphafold to single state state Y
Use MPNN for two-state sequence design after smaller sampling runs with “almost linkres” to sample backbones again
Look for complex prediction on AF2 then fold state X
Increase SAP tolerance somewhat
If disulfide stapled states are needed or wanted, just staple and predict

Pipeline:
make bound states ~180k
probably split into junctions x 1-3, non-junctions x 5-10, check lengths of non-junctions to make sure there's nothing too huge
loop, allow extension, mpnn
AF2 interfaces, make pairs for those that form interfaces, try to loop parents.
TODO: ask Nater tot if how to turn PAE matrices into a scalar
test neighborhood vs difference only MSD with both "almost linkres" and tMPNN
AF2 interfaces again, then AF2 the monomers that pass
order chA and do SEC / expression screening # TODO order chB and do SEC / expression screening too?

dev TODOs:
TODO: 
    01 loop bound_states 
    02 MPNN bound states  # do I need to filter befor af2?
    03 fold bound states 
    04 loop parents
    05 design paired states
    06 MPNN paired states 
    07 fold paired states
    08 detail and filter
    09 order and analyze
TODO: mpnn script distributable sig with packed_pose_in or pdb_path, returns iterator of poses, optionally a single pose with many sequences in the datacache
TODO: mpnn wrapper accepts a pdb, either returns the pdb and a fasta, or the pdb with the many sequences in the scores

TODO: AF2 wrapper accepts a reference pdb, has options to predict a single sequence, or predict many sequences, in many sequence case can accept fasta, otherwise will safely try to read sequences from the scores
TODO: AF2 wrapper makes a multiprocessing pool of processes, each process compiles the model runners 1 and 3, and swaps weights as neccessary, this allows efficient use of GPUs on a node.
TODO: AF2 wrapper allows just running single models, and manages outputs
TODO: AF2 inference function that returns a list of poses, and a identically indexed list of score dicts


Paper TODOs:
What will fig. 4 be:
FRET? NMR? photoswitching? negative cooperativity? 
crowdsource cool tricks, maybe ask some synbio people

crispy snippy TODOs:
fluo polarization for protease or fluorophore/quencher?

